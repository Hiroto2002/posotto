import { ClerkProvider } from '@clerk/nextjs'
import { currentUser } from '@clerk/nextjs'
import type { Metadata } from 'next'
import {
  Box,
  Grid,
  GridItem,
  UIProvider,
  UIStyle,
  colorModeManager,
  ColorModeScript,
  ThemeConfig,
  extendTheme,
  withDefaultColorScheme,
} from '@yamada-ui/react'
import LeftSidebar from '@/components/LeftSidebar'
import RightSidebar from '@/components/RightSidebar'
import Menubar from '@/features/Menubar/components/Menubar'
import Topbar from '@/components/Topbar'
import theme from '@/theme'
import '@/app/globals.css'
import { BG_COLOR } from '@/variants'
import Head from 'next/head'
import QueryProvider from '@/providers/QueryProvider'

export const metadata: Metadata = {
  title: 'posotto',
  description: 'Generated by create next app',
}
export const fetchCache = 'default-no-store'
export const dynamic = 'force-dynamic'

const config: ThemeConfig = {
  initialColorMode: 'light',
  disableTransitionOnChange: false,
  var: { prefix: 'ui' },
  breakpoint: 'up',
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  const user = await currentUser()
  const userData = {
    id: user?.id || '',
    name: user?.firstName || '',
    imageUrl: user?.imageUrl || '',
  }
  return (
    <ClerkProvider>
      <html lang="ja">
        <head>
          <link rel="manifest" href="/manifest.json" />
          <script src="@/app/script.js"  defer></script>
        </head>
        <body>
          <ColorModeScript type="cookie" nonce="testing" />
          <UIProvider
            colorModeManager={{ ...colorModeManager }.cookieStorage}
            config={config}
            // theme={theme} // yamada-uiのバグ？
          >
            <QueryProvider>
              <Topbar />
              <Box w="full">
                <Grid
                  templateColumns={{ base: '0fr auto 0fr', lg: '1fr auto 1fr' }}
                  bgColor={BG_COLOR}
                >
                  <GridItem>
                    <LeftSidebar />
                  </GridItem>
                  <GridItem w={{ base: 'full', lg: '61em' }} py="6em">
                    {children}
                  </GridItem>
                  <GridItem>
                    <RightSidebar />
                  </GridItem>
                </Grid>
              </Box>
              <Menubar />
            </QueryProvider>
          </UIProvider>
        </body>
      </html>
    </ClerkProvider>
  )
}
