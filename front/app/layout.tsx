import { ClerkProvider } from '@clerk/nextjs'
import { currentUser } from '@clerk/nextjs'
import type { Metadata } from 'next'
import {
  Box,
  Grid,
  GridItem,
  UIProvider,
  UIStyle,
  colorModeManager,
  ColorModeScript,
  ThemeConfig,
  extendTheme,
  withDefaultColorScheme,
} from '@yamada-ui/react'
import LeftSidebar from '@/components/shared/LeftSidebar'
import RightSidebar from '@/components/shared/RightSidebar'
import Menubar from '@/components/shared/Menubar'
import Topbar from '@/components/shared/Topbar'
import theme from '@/theme'
import '@/app/globals.css'
import { BG_COLOR } from '@/variants'
import Head from 'next/head'

export const metadata: Metadata = {
  title: 'posotto',
  description: 'Generated by create next app',
}
export const fetchCache = 'default-no-store'
export const dynamic = 'force-dynamic'

const config: ThemeConfig = {
  initialColorMode: 'light',
  disableTransitionOnChange: false,
  var: { prefix: 'ui' },
  breakpoint: 'up',
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  const user = await currentUser()
  const userData = {
    id: user?.id || '',
    name: user?.firstName || '',
    imageUrl: user?.imageUrl || '',
  }
  return (
    <ClerkProvider>
      <html lang="ja">
        <Head>
          <script src="@/app/script.js"></script>
        </Head>
        <body>
          <ColorModeScript type="cookie" nonce="testing" />
          <UIProvider
            colorModeManager={{ ...colorModeManager }.cookieStorage}
            config={config}
            // theme={theme} // yamada-uiのバグ？
          >
            <Topbar />
            <Box w="full">
              <Grid
                templateColumns={{ base: '0fr auto 0fr', lg: '1fr auto 1fr' }}
                bgColor={BG_COLOR}
              >
                <GridItem>
                  <LeftSidebar />
                </GridItem>
                <GridItem
                  w={{ base: 'full', lg: '61em' }}
                  py="6em"
                  // bg={BG_COLOR}
                >
                  {children}
                </GridItem>
                <GridItem>
                  <RightSidebar />
                </GridItem>
              </Grid>
            </Box>
            <Menubar user={userData} />
          </UIProvider>
        </body>
      </html>
    </ClerkProvider>
  )
}
